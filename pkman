#!/usr/bin/env lua5.2
local argparse = require 'argparse'
local pkman = require 'packagemanager/pkman'

local function Run( commands )
    local parser = argparse()
    parser:command_target('command')
    for commandName, command in pairs(commands) do
        local subparser = parser:command(commandName, command.description)
        if command.setupParser then
            command.setupParser(subparser)
        end
    end
    local arguments = parser:parse()
    commands[arguments.command].execute(arguments)
end

local commands = {}
commands.list =
{
    description = 'Print packages.',

    execute = function( arguments )
        local db = pkman.buildPackageDB{localPackages=true, remotePackages=true}
        pkman.markUserRequirements(db)
        for package in pkman.iterPackages(db) do
            local status = pkman.getPackageInstallationStatus(package)
            print(string.format('%s %s %s', package.name, package.version, status))
        end
    end
}
commands.update =
{
    description = 'Synchronize package lists, install stuff.',

    execute = function()
        pkman.updateRepos()
        local db = pkman.buildPackageDB{localPackages=true, remotePackages=true}
        pkman.installRequirements(db)
    end
}

Run(commands)
